<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pxbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAABMCAYAAAAoefhQAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAADp0RVh0Q29tbWVudAB4cjpkOkRBRjhKZ1M5T1BrOjYsajo4MDIwNTg3MTUyNTY3
        NDcwOTQsdDoyNDAyMDcyMgJxhnYAABOWSURBVHhe7Z0JXFRV+8cr08zMHcEVFUUFZRsQ0dwVXECl3DIU
        BNEUzQ1XQCXJfV+LzDQ1TH3T/pnvW/ZqmaVoli2YZZmW5b5ghRvwe89z7tzx3pkzOCPLTP3P8+n7Ie55
        znPvjPd3z3nOcnmoZr0mkEiKiwaNm6Fjp87w8QsUljs7UiCSYsOjcXPExcXi1VfTMWpUAheLyM+ZkQKR
        FBtNvP2wevUq7N37X6Snv4KwsK6oVV/s66xIgUiKFR//QMyZMxsff/wR/+njZxD6OStSIJJih0SSkZGB
        Awc+wfDhw1Df8+/T1ZICkZQIqkioJQkNDYN7Qy+hn7MhBSIpMUgka9asweDBg9C/fz94NGku9HMmpEAk
        JUadBk3Rs2cEH9kKD+/BR7lEfs6EFIikRKGRre49emDHjrfRrn0HoY8zIQUiKXEasq7V2rWv8vkREozI
        x1mQApE4hICgYHz++eeIjh6MOh7Om7BLgUgcQm2Wj8TGxeHQoYMIDmkt9HEGpEAkDsPTywfbtm3FggXz
        0aipj9DH0UiBSBwKLWQ8fvw4wsMjnHIZihSIxKG4N/JGamoqtm/fDq/m/kIfRyIFInE4NIF4+HCmkrCz
        3ETk4yikQCQOp3b9pujTty+WLVvKR7e0ZdTtquvh5TDhSIFInILG3r5ISpqGhISR8AsIRGhYGAYOHIiY
        mGi+l2TEiOf5//fp0wchrduU2Cy8FIjE4dCQry/rZkVG9saqVSsxYEB/pKQkc7GQKFRiY4cgMXEC1qxZ
        jdGjR6EJE5UoXlEiBSJxKO4NvREeEYElSxZj/PhxXADUWjw/+CkMGRCCLp3bYuWyNCx4aTSGDWqNlBda
        Ii42Gq+9tpblLNGoW8yrgqVAJA7lqTbt8PLLazBxYiIGPRuObl078oWMk0b3xJy0SRgSFYo+kaGYlBCG
        vr1aoWtYJ8ye/RIXyPLly9DcN0AYt6iQApE4DOpaxccP5Tc7rfDt+3QY+vfphp07d2LJwlSMGtKKtyId
        O7TB88MG8R2JWVlZ2LBhPfbv34/t27ehdauQYl2qIgUicRi0H2TKlMlcIAS1DOPGjeVJOTF58iRs3PgG
        F8KHH+5BZmYm3nhjA06cOIGjR4/yLtnMbk1hCCi+bbxSIBKHQUtNpk9PwaZNG7F161aTUFRIDB988D42
        b97Ef9+1axfOnDmDTz89wHOWuLAW2BrpjgmhzYttG68UiMRh0Mx5v67t+M2+b98+bNmSgZMnT+LUqVN8
        a+7OnTt0giEhkWhmzpyBmG6tsal3PS4Q+tm6RfG0IlIgEofRNtiAN9nNnRAWwHKMeC4Uyi9IHHv27MFb
        b20xiYPKKJF/7pkIJHX1xpbe7niRda/SujXhIhnDWhEaEROdpzBIgUgcQq36TRHXyY/f3ER6Tw8khjbD
        0O5PIb5/L8T2782JiwzF0K4teTdqaXgjLgy1jpZ1PRvA189yRIuGgT29fPmAgHmZLUiBSBwC5QzTwryF
        N7uIVyI8sNnYpRKxoIcnBrb3t1gRXK9RM/gGBD7wSmEpEIlDoFnwxeymFt3sImi0Ss05RMR39sOc7o15
        a6E9D7UcQS3067vsQQpE4hCa+QZgLesWiW52W6C6M7p6sXzEC6siGvLuGgnIYNAn67Rmq1WrEN0xe5AC
        kTgEWnsluvFtgbpaz3f25f9PifqksGbY0Ks+/71XmwC+OtjfEMRfDiE6tz1IgUgcgj0CoQR8VBcfvGlM
        0BOZIOax7pS53xqWp0S0a8HEEcg3YonOay9SIBKHQF2s9canvi0sD2+EeNaNItShXepSxXXy5y0I/R7T
        MQCDGaLzPShSIBKHQPs/FtqRpFvjdSayKCYKdfj3mbbFLJBhLmOwr9cn+P2Dc7ielW0TJ77/AX5TU+DW
        9N6eYorzUdwBnN93QVhHBMWpPHy0Kc6hx47g6uFrQl9zLh6/hEMHP8f4l+bDzVv/JdV1b4aXqizCkcQv
        cfHTS8L6KuePX8DBg4cxPm0uanjq37TB47gtwtG0Y7iceUVY3xy6ru379qNKdDyP0aZWN3xvOCn0LYhz
        x89jxTu7ULVfFI/TxzX6geKc/e43HqdaRB/T52pepxXWeW7C9+t+xNVj1r/va1nX8UvWr3j3vf+gXfRQ
        U33Cq04w3nP/AN+8fxw73t2Nhk8P0JVriXMZhZ8HnkHOiWz8eeoMNm1bgcWjO1nc/LYypktzPo+ysRdL
        0ot4XZZOIMNdxgJtAOQy7LTGjOrtQu/FiVKO22sPMdQ42Y/cALKV4/bY6AsX4dLjadPnWv/km0CysdAO
        G/PzaVRv3VEf51VjoR32GaPU7+d4jNCakUCwctxey2CUOXKUx4mtPqpQcR7f8X88Dok+68nvgG+VMlvt
        KsPjv/tQo6GyBmpy1RnASKWM7FB+PurOXcjLzEmsyv4xhhsdmQ1l9N2yRHjz28O4YliTpRPIR2UPAOuU
        iyb7yw4aMdQbm8fZxw4wy2eI/K1hTSB5DJG/FjoX2VFG6S+/4jHquHsh5+Ec4CelzN44ZdnT0BSnDIvD
        /iOjZ4ioroi9DFUgnWv2Qk6Lm8j7K9/C7y5DNTqNefl6hiqQ6OojeJzcmw8WRxVIT7dngfbsgNFuM8z9
        tdxkqJbAqDhtBo8zvcpsYLxyXDVrIikOgdBQr59/0a/H0gkkq8wJ4N/KRZPVZJRftgoVZs+3CTefFvfi
        ZCkx6Eulm/5B4mgF8j3joTt3hP5EyuQb+JO5k/1Kvnfv8hhN6gYpF6CJ88jly8IYFWcvxPyJ0MUpdeaX
        e3FclONkexjW4ohQbySVGo19deUx007gpOYpXp9RblOGzoeo9MIEXRzXoKd05WOnnLOIU37lyzofosqQ
        4bw+b4n6Kr5k7OOj9NEvLfwJ39St2P6a4kfG2gyU2/ovHkckEDKRSIpaIC9HeKBtMM2WF/2LHe4rENdA
        +18LKRLIg8QxF8jDOTlCP+JcqfPAOcWXC4RBx0UCefTHnyzqE3XcvRVfTRz1yS8SiLU4D8K75f4DvKPE
        JqMbu2r/QULfgjhW5muLOK6trL9FXSSQchszhL4DXGOB7oofGQlEbYnMBaK2wmTmIhEJJDLjwQQyo2tT
        tAg0FIs4CJ1AvilzHHhPuWiyaMbEMYswdciLFiTGJmPgc0PRxCdIF5DQCuQWoyfDWhwtMUNH6uJoBXKW
        0fvWbWE9Irs3c6SOMbMzDGsCoTh9f78kjJEUM0u5WGMcrUA86xrYHascJ/uCYS0OMTZ2KrpF9EXtBrbt
        dnMWgbzOiNl7RPiZXovaCKQqfmQFCWQu4wr1Z42mFYlIILXS03myTYm2SAhaaMRqdvcm6NXGwEfDtJ+n
        qNEJ5O0n3gXmKRdtq13LuYmnV67RjfhoBWKvlf76W7iGtOdxHjRJX8Z45Np1HsNcIPaYViDEuVIXTK2L
        rZZ5+gzqjZ1oimENZxGIPVaQQFhmg/kbmUIuKb+TqSIRCeTJJStQr5E3bw1iO/rxJSSLwz355N+K8IZ8
        SJiODe/six7tgrkwSuJVpTqB0BDklZpXkU+PYDvsN8bjO5UviiiMQOheLswo1h+MBJZ/VJowhccoSoGM
        cBmPO4NZCnxHKbfV6GlacUqKKY6If6JAAlN34FLAZQuRxE9n7a9AIOo1UXeJ1lA1beaHLm1a8mXwU8O8
        8XT7ID45mMKE4rD3YtGY+ESPFExa/jpSfj2LJJYYi5h+Ox9Zmia0fm4u3LyU+QetQGhUZBpDFEMEJeLV
        23bhcbQCoe94GvtyRXWIGex6/jB2fE8xdMm1RiD3izOTXbAax1wgRPuaPZDcZS6Stu1E8uUrwhjELPrg
        RvuYUfqrb3RxzHEWgVAKOi0vT/iZku/cxWbNENn9BEKJfYeaERYiyWTf745Dxl+YmQtEC7UUJAjqWtGM
        +dzujfnSdtquK/IvaiwEYiuHHzsKbFM+IJl2HuSfmKTbA49TRolBpp0HscY/LUlXBUJlIpEYR8u5FSQQ
        ws8/AEuYKCj3iO3kj6gOASX2KlIpEA1SIMUjEEIkEtXuJxAf3wA828HAl7jT0pL2LQOFfsWBTiBbyr+N
        UyvP4NyRC/fldibriBs/LPVIXBlq14iWiOAgL+ITatSanj12SRhHyxdffoWqg+JQo4nyd+u0AqEnTmZu
        vrAekXuIncnYrTnOeIh1oyhGUQmkUd0AHHH7Qnhuc84zkKnEIGO3Pkqd/c3ifFrsFUikWxS+DPja4tx3
        6N/lihKDjEbbzn5177v/4ehPWJSxDS5hETxOSQmEsCaSggRCSfsc1q0iYZBIaEUvdbFK6k8l6ATCn/ya
        eRBbjZ6QD//1F2p4KEuMUyvPA6YoZfYa3Z+FSdLJ5jAePfUzj1FUAuFxNPMg9hjlo4/t/9TifFrsFQi/
        sYtgqUlJCoQQiSSGYS4Q+otTYZ2DTfkHbc9t7mcw7QNJ6OyDBsX0qh8thRIIPdXp6ejOkroKM9JMcWhZ
        xoqq6biy+Cpu0ESIHVYYgdCDcxXjcZZQVh42isdwpEBYpw8vMh758y9U693P4nxa/r8IhCCRnAr8GbdO
        38WPzK8Wo+LU6aZyGr597pkWGB8fiJH9DBgZ6ovgli35cWo5aKsu5SO92xgQEmJAy5YGvjmKttsWdW4i
        zEEqjUnkiraFCnMWsH/8/hYxVNx8W/AhTlFda7j56vcQV0xOFfqJqJA2Fy6h4br6Kk/OW8R9Kk5/UViu
        pULaPCXerDkWZWocW6AHR/XWnSxiWKNqVKyprnahpDVcg9vqzmcrtGraWhx1GYo13PxDrMZx6dzDVFbt
        mWd1ZSKqDB3BxaH2PlT8AgIwOiYIH63zwq7V3pg+OgDqm0nCnzLwVmRcVx/MGscS+Gl+GBMbyH9Sq1OU
        s+oPnKRLJMUJtRbUpercMYQLJSnBgMjwYPj6B/D5kbGhzbGMCeL0bk8MjwrCyMFBmDgsEEP6t0D9RkXX
        9ZICkTg11KWKeiaYCyBppAHPRgbzN7rTT2pV2rZphS4dWyKGdcX8DYYiz0ukQJyMlCppNkGbjtzdLW+G
        cVWn8vJ+rjEWZVomVZ3O/SLdnrMo86/dFuOqKXGs8UK1yWhWx/JtIZSniPzNGV81CYG1LYefe9ToZ+Gb
        5jYXi+stxvrmC7HQfRFSXebgraCFeK3ZIsysdS/3VaFcMqb6CCSbxbGGu7v1WXkpECeDBgnysoHsvPtz
        4nYuBn2bpUvmf330Nz4HdT0vH6/cvm01Ub72yHXk/6L4zb91CxWTZvLjtF8lu+wNYClw+wJwI1d8buLs
        3XzM/fUsKs+YZYq7tfwOYC3w5x1xHS3nWf308xfhunw1ahjzhoWVVgCTgZxb4joizuTmorRxn0xtdy98
        UvYzoBeQy74HW67jWl4eXH773fQZtEiBOBl8FM0Oo2VhPjf+4Ikz1ecCoeE3Zm8wnly41OIcBAkE1xS/
        5YwKqbP58e1PvKOsDbLDhuXno8qgWF6fC4SGyewwGpavODmZ1+cCoeExO4w+xqPfneD1+7sOARqwA9qd
        XTZYtexsXt8cKRAnQysQmmt9mT0Z127foWP9tl248abiQzaCUWXIMF6/sAI5WPawaTcobQ1Y/fNpi/MT
        p9+4jlzjtoDtjPKr03l9rUBoZH3lxUvC+sc3/Y47rAUj+5xRdte/ef167j6IjU7A2oxtJt/MN7/HrW8U
        X3ogrLxxQxdrJYNGU6n+WNY1xCDFl2w9E6/W1xqua5TrN0cKxMnQCiSZoa5K1uJZNxDavSljGepwa5EI
        hGZ+me1nPL7tbYu6BN87ZLxpaQvRE+s28ONagZxmlDl02KIusbvcHtPeIwpT9sO9Qj9iRcV0YIHiS0uX
        rM1jEVwgNDVvNA/W/RL52YoUiJPhbALx3/wN0iovsIDvjbFBIPUO/CKsf6L0DyUikEZ384Tn1yKT9L8R
        ziQQlr8iJ591561A5WTWBMJcCqyfyyD7kFFu81u669NSGIFQKiI6t5Yc1g1zYV1BUTwpECfDmQRiq1kT
        iC1G20t63rwJl+69ddenpTACsdVkkv43wZkEQmGWnPwJqzdssuDsqivIu6z4WRMIOwOWnruIPz67tyCP
        BPEKE8SqTRmY9+o6dFqwGNU7dNVdmzmFEUh6Xp7w+s2pvnSlMJ4UiJPxT0zS+7pH4+bue+OunzJcd7+P
        Gjb+yTSZpEtMmAuk34j3Ma/SUh1LKq62KpBTj7LbUiOQ0LTPLOoTNx9mN2wJCYSOc5G8d08kdIr67+3H
        GDdl/qMg7BFIQrVEiyRd9Pm10NCyKBYhBeJkaAVCSTB1SayhGi0tr2Z8F25G+X8pr4Rkdr/6LD/lNplR
        efR4Xr+4BEKQSHI0IqHNdHQdx1iSXPaDD01+5tgjkJBaXXCnJ82WKKae4364XL0mjCcF4mRoBWKLfceo
        8tkh01IN7zotsTd2P/LVIaL7GO1ZqXvyR9QwvjC8OAVC9GEiubabspN7VpTDvMSI2hOQfeyGUsFGk0n6
        34iFS1bYxARGXZaj1BAs7+7Rux/S5i8W1lOZymicNANu3vp32k6YlMTLX2BUjk/QlWmZmpzK/YYzqmje
        9h4/4gV+PIVRKXGqrg5Rz9MH06bPMl3HJEZls1eqmjMgKpb7zmHYsp+noZc/xk9JMZ3jfrgK3iFMSIFI
        JAUgBSKRFIAUiERSAFIgEkkBSIFIJAUgBSKRFIAUiERSAFIgEkkBSIFIJAUgBSKRFIAUiERilSb4H7vw
        85IvTEwXAAAAAElFTkSuQmCC
</value>
  </data>
</root>