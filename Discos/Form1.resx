<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pxbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>